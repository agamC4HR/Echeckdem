@model CombinedDetailedViewModel

@{
    ViewData["Title"] = "Detailed Report";
    ViewData["Heading"] = "Detailed Report";
    ViewData["Heading_child"] = "Comprehensive labor compliance insights and actions.";
}


<style>
    .table-heading-container {
        position:sticky;
        width:96vw;
        top:70px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #fdfdfd;
        padding: 3px 5px;
        border-radius: .375rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: -28px;
        margin-top:38px;
        margin-left:19px;
    }

    .table-search-input{
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: .375rem;
        font-size: 14px;
        width: 200px;
    }

    .table-export-btn{
        background-color: #3AC47D;
        color:white;
        border: 2px solid #3AC47D;
        font-weight:600;
        padding: 5px;
        border-radius: .375rem;
        display: flex;
        align-items: center;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .table-export-btn:hover {
            background-color: white;
            color: #3AC47D;
            text-decoration: underline;
            border: 2px solid #3AC47D;
        }

    .table-heading-text {
        font-size: 16px;
        color: black;
        font-weight: bold;
    }

    .table-filter-buttons {
        height:29px;
        background: #e0dede;
        display: flex;
        align-items:center;
        gap: 10px;
        border: none;
        border-radius: 0.375rem;
        padding:3px 5px;
    }

    .table-filter-btn {
        background-color: transparent;
        border: none;
        padding: 6px 10px;
        border-radius: 0.375rem;
        font-size:12px;
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
    }

        .table-filter-btn.active {
            background-color: #ffffff;
            border:none;
            border-radius:0.375rem;
            height:26px;

        }

    .table-container {
        background:transparent;
        padding: 20px;
        border-radius: 8px;
        /* height: 60vh; /* Define the height of the container */
        overflow-y: auto; /* Allow vertical scrolling */ */
    }

    .styled-table {
        position:relative;
        width: 96vw;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 16px;
        text-align: left;
        border-radius: 8px;
        overflow: hidden;
    }

    .styled-table thead {
        position:sticky;
        top:0;
        z-index:10;
        background-color: #ffffff;
    }

        .styled-table thead tr {
            font-family: "Arial", sans-serif;
            background-color: #ffffff;
            color: #000000;
            text-align: left;
            font-weight: bold;
        }

        .styled-table td {
            padding: 5px 10px;
            border: 1px solid #dddddd;
            font-size: 12px;
            width: auto;
        }

        .styled-table th {
            background: #cccccc;
            padding: 5px 10px;
            border: 1px solid #dddddd;
            font-size: 14px;
            width:auto;
        }

            .styled-table th:nth-child(1) { /* S.No. */
                width: 4%;
            }

            .styled-table th:nth-child(2) { 
                width: 15%;
            }

            .styled-table th:nth-child(5) { /* Site */
                width: 150px;
            }

            .styled-table th:nth-child(6) { /* Period */
                width: 9%;
            }

            .styled-table th:nth-child(7) { /* Due Date */
                width: 9%;
            }

            .styled-table th:nth-child(8) { /* Status */
                width: 10%;
            }

            .styled-table th:nth-child(9) { /* Date of Deposit/Renewal */
                width: 7%;
            }

            .styled-table th:nth-child(10) { /* City */
                width: 120px;
            }

            .styled-table th:nth-child(11) { /* State */
                width: 120px;
            }

            .styled-table th:nth-child(12) { /* Region */
                width: 120px;
            }

        .styled-table tbody tr {
            background-color: #f9f9f9;

        }

            .styled-table tbody tr:nth-of-type(even) {
                background-color: #f1f1f1;
            }

            .styled-table tbody tr:hover {
                background-color: #e2e2e2;
            }

        .styled-table tbody td {
            color: #333333;
        }

</style>
<div class="table-heading-container">
    
    <!-- Search bar -->
    <input type="text" id="searchBar" placeholder="Search..." class="table-search-input" onkeyup="searchTable()">

    <!-- Download button with icon -->
    <button class="table-export-btn" onclick="downloadData()">
        EXPORT
    </button>
  
@*     <h2 class="table-heading-text">Category</h2> *@

    <div class="table-filter-buttons">
        <button class="table-filter-btn active" onclick="filterTable('all')">All</button>
        <button class="table-filter-btn" onclick="filterTable('registration')">Registration</button>
        <button class="table-filter-btn" onclick="filterTable('payroll')">Payroll</button>
        <button class="table-filter-btn" onclick="filterTable('return')">Return</button>
    </div>

    <!-- More filters button with icon -->
@*     <button class="action-btn" onclick="toggleMoreFilters()">
        <i class="bx bx-filter-alt"></i> More Filters
    </button> *@

 
</div>



<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>S.No.</th>
                <th>Organization Name</th>
                <th>Category</th>
                <th>Type</th>
                <th>Site</th>
                <th>Period</th>
                <th>Due Date</th>
                <th>Status</th>
                <th>Date of Deposit/Renewal</th>
                <th>City</th>
                <th>State</th>
                <th>Region</th>
                @* <th>Form</th> *@
            </tr>
        </thead>
        <tbody>
            @{
                int sno = 1; 
            }
            @foreach (var registration in Model.Registrations)
            {
                <tr class="registration-row">
                    <td>@sno</td>
                    <td>@registration.OName</td>
                    <td>Registrations</td>
                    <td>@registration.TP</td>
                    <td>@registration.Lname</td>
                    <td>N/A</td>
                    <td>@registration.Doe?.ToString("dd MMM yyyy")</td>
                    <td>@registration.GetStatusDescription()</td>
                    <td></td>
                    <td>@registration.LCity</td>
                    <td>@registration.LState</td>
                    <td>@registration.LRegion</td>
                    @* <td></td> <!-- Empty for Registrations --> *@
                </tr>
                sno++;
            }
            @foreach (var contribution in Model.Contributions)
            {
                <tr class="payroll-row">
                    <td>@sno</td>
                    <td>@contribution.OName</td>
                    <td>Payroll</td> 
                    <td>@contribution.TP</td>
                    <td>@contribution.Lname</td>
                    <td>@contribution.FormattedPeriod</td>
                    <td>@contribution.LastDate?.ToString("dd MMM yyyy")</td>
                    <td>@contribution.GetStatusDescription()</td>
                    <td>@contribution.Depdate?.ToString("dd MMM yyyy")</td>
                    <td>@contribution.LCity</td>
                    <td>@contribution.LState</td>
                    <td>@contribution.LRegion</td>
                    @* <td></td> <!-- Empty for Contributions --> *@
                </tr>
                sno++;
            }
            @foreach (var returnData in Model.Returns)
            {
                <tr class="return-row">
                    <td>@sno</td>
                    <td>@returnData.OName</td>
                    <td>Returns</td>
                    <td>@returnData.RTitle</td>
                    <td>@returnData.Lname</td>
                    <td>@returnData.Period?.ToString("MMMM yyyy")</td>
                    <td>@returnData.LastDate?.ToString("dd MMM yyyy")</td>
                    <td>@returnData.GetStatusDescription()</td>
                    <td>@returnData.Depdate?.ToString("dd MMM yyyy")</td>
                    <td>@returnData.LCity</td>
                    <td>@returnData.LState</td>
                    <td>@returnData.LRegion</td>
                    @*  <td>@returnData.RForm</td>  *@
                </tr>
                sno++;
            }
        </tbody>
    </table>
</div>

<script>
    function filterTable(type) {
        const allRows = document.querySelectorAll("tbody tr");
        const registrationRows = document.querySelectorAll(".registration-row");
        const payrollRows = document.querySelectorAll(".payroll-row");
        const returnRows = document.querySelectorAll(".return-row");

        // Show or hide rows based on the selected filter type
        if (type === "all") {
            allRows.forEach(row => row.style.display = "table-row");
            updateSerialNumbers(allRows);
        } else if (type === "registration") {
            registrationRows.forEach(row => row.style.display = "table-row");
            payrollRows.forEach(row => row.style.display = "none");
            returnRows.forEach(row => row.style.display = "none");
            updateSerialNumbers(registrationRows);
        } else if (type === "payroll") {
            registrationRows.forEach(row => row.style.display = "none");
            payrollRows.forEach(row => row.style.display = "table-row");
            returnRows.forEach(row => row.style.display = "none");
            updateSerialNumbers(payrollRows);
        } else if (type === "return") {
            registrationRows.forEach(row => row.style.display = "none");
            payrollRows.forEach(row => row.style.display = "none");
            returnRows.forEach(row => row.style.display = "table-row");
            updateSerialNumbers(returnRows);
        }

        // Update active button
        document.querySelectorAll(".table-filter-btn").forEach(btn => btn.classList.remove("active"));
        document.querySelector(`.table-filter-btn[onclick="filterTable('${type}')"]`).classList.add("active");
    }

    function updateSerialNumbers(rows) {
        rows.forEach((row, index) => {
            const serialCell = row.cells[0]; // Assuming the first cell is for the serial number
            serialCell.textContent = index + 1; // Update serial number based on index
        });
    }
</script>
