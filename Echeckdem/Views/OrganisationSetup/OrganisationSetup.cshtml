@model Echeckdem.CustomFolder.CombinedOrganisationSetupViewModel

@{
    @if (Context.Session.GetInt32("User Level") == 1)
    {
        ViewData["Title"] = "Organisation List";
        ViewData["Heading"] = "Organisation Management";
        ViewData["Heading_child"] = "Organizational intelligence and response toolkit.";
    }
}

<style>

 /*    .org-link {
        display: block;
        text-decoration: none;
        color: black;
        font-size: 12px;
        font-weight: 300;
        text-align: left;
        padding: 0;
        font-family: Arial;
    }

        .org-link:hover {
            text-decoration: underline;
        } */

    .org-details-container {
        display:block;
        position: absolute;
        width: 99vw;
        top: 40px;
        left: 7px;
        font-family: 'Arial', sans-serif;
        color: #333;
        background: #ffffff;
        border: 2px solid red;
        border-radius: .375rem;
    }

    .org-details-header {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        margin: 20px 0;
        border: 2px solid #dd3432;
    }

    .child-org-details-header{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        border-bottom: 2px solid #dd3432;
        padding: 0px 10px;
    }

    .child-org-details-header h2 {
        background-color: white;
        color: #dd3432;
        padding: 10px;
        font-weight: bold;
        text-align: center;
        margin: 0;
        font-size: 16px;
    }

    .editButton {
        padding: 5px;
        font-size: 12px;
        font-weight: bold;
        background-color: white;
        color: #dd3432;
        border: 2px solid #dd3432;
        border-radius: .375rem;
        cursor: pointer;
        width:235px;
    }

        .editButton:hover {
            background-color: #dd3432;
            color: white;
        }

    .org-details-links-container {
        display: grid;
        grid-template-rows: auto auto;
        row-gap: 10px;
        padding: 10px;
        background-color: #f8f9fa;
        border-bottom: 1px solid #ddd;
    }

    .org-details-upper-links, .org-details-lower-links {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 10px;
        justify-items: stretch;
    }

    .org-details-links-container a {
        background-color: #dd3432;
        color: white;
        text-decoration: none;
        font-size: 12px;
        padding: 8px 12px;
        border-radius: 4px;
        border: 2px solid #dd3432;
        transition: background-color 0.3s ease, color 0.3s ease;
        text-align: center;
        white-space: nowrap; /* Prevent text wrapping */
    }

        .org-details-links-container a.active {
            background-color: white;
            color: #dd3432;
            border: 2px solid #dd3432;
            font-weight: bold;
        }

        .org-details-links-container a:hover {
            background-color: white;
            color: #dd3432;
            border: 2px solid #dd3432;
        }

    .org-details-body {
        /* display:none; */
        display: grid;
        grid-template-columns: 1fr 1fr; /* Two equal columns */
        gap: 15px;
        padding: 20px;
        font-size: 16px;
        line-height: 1.6;
    }

    .Edit-OrganisationInfo-Form{
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 15px;
        padding: 20px;
        font-size: 16px;
        line-height: 1.6;

    }

        .org-details-body p {
            margin: 0;
        }

        strong {
        color: #dd3432;
        }


    .Edit-OrganisationInfo-Form label {
            font-weight: bold;
            color: #dd3432;
            padding-right: 10px;
   }

    .Edit-OrganisationInfo-Form input {
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

    .Edit-OrganisationInfo-Form button {
        padding: 5px;
        font-size: 12px;
        font-weight:bold;
        background-color: white;
        color: #dd3432;
        border: 2px solid #dd3432;
    }

        .Edit-OrganisationInfo-Form button:hover {
            background-color: #dd3432;
            color:white ;
        }

    .view-doc-button {
        display: inline-block;
        padding: 6px 12px;
        font-size: 12px;
        color: black;
        background-color: white;
        border: none;
        border-radius: 4px;
        text-decoration: none;
    }

       /*  .view-doc-button:hover {
            background-color: #218838;
        } */



    .dropdown-container {
        margin-bottom: 20px;
    }

    .styled-dropdown {
        padding: 5px;
        font-size: 12px;
        border: 2px solid #dd3432;
        border-radius: .375rem;
        color: #333;
    }

        .styled-dropdown:focus {
            outline: none;
        }

 
</style>
@if (Context.Session.GetInt32("User Level") == 1)
{
    <div class="org-details-container" id="orgDetailsContainer">
        

        <div class="child-org-details-header">
            <h2 id="orgDetailsHeader">Select Organisation</h2>
                <select id="organisationDropdown" class="styled-dropdown" onchange="onOrganisationChange()">
                    <option value="">Select an Organisation</option>
                    @foreach (var org in Model.OrganisationsList)
                    {
                        @:
                        <option value="@org.oid">@org.Oname</option>
                    }
                </select>
            @*  *@
        </div>

        <div class="org-details-links-container" id="org-details-links-container" style="display:none;">
            <div class="org-details-upper-links">
                <a href="javascript:void(0);" onclick="loadGeneralInfo()" id="generalInfoLink" class="active">General Information</a>
                <a href="javascript:void(0);" onclick="showUploadForm()">Add Locations</a>
                <a href="javascript:void(0);" onclick="LocationDataForm()" id="locationDataInfo">Location Data</a>
            </div>
            <div class="org-details-lower-links">
                <a href="javascript:void(0);" onclick="showBOCWUploadForm()">BOCW SITE SETUP</a>
                <a href="javascript:void(0);" onclick="viewBOCWData()">BOCW Site Data</a>
            </div>
        </div>

        <div id="orgDetailsBody" class="org-details-body" style="display:none;">
            <p><strong>OID:</strong> @Model.SelectedOrganisation?.oid</p>
            <p><strong>Name:</strong> @Model.SelectedOrganisation?.Oname</p>
            <p><strong>SPOC:</strong> @Model.SelectedOrganisation?.Spoc</p>
            <p><strong>SPOC Email:</strong> @Model.SelectedOrganisation?.spoc_eml</p>
            <p><strong>Start Year:</strong> @Model.SelectedOrganisation?.styear</p>
            <p><strong>Contact Name:</strong> @Model.SelectedOrganisation?.Contname</p>
            <p><strong>Contact Email:</strong> @Model.SelectedOrganisation?.Contemail</p>
            <p><strong>Active:</strong> @(Model.SelectedOrganisation?.Oactive == 1 ? "Yes" : "No")</p>

            <p>
                <strong>Contract Copy:</strong>
                @if (!string.IsNullOrEmpty(Model.SelectedOrganisation?.FileName))
                {
                    <a class="view-doc-button" target="_blank" href="@Url.Content($"~/Files/{Model.SelectedOrganisation?.oid}/Copies/{Model.SelectedOrganisation?.FileName}")">View Document</a>
                }
                else
                {
                    <span>Contract Copy not uploaded. Upload it using Edit icon.</span>
                }
            </p>
            <p><strong>Contract Expiry Date:</strong> @Model.SelectedOrganisation?.ContractExpiryDate</p>
            <p>
                <button type="button" class="editButton" id="editButton" onclick="showEditForm()">Edit</button>
            </p>
        </div>
        <!-- Form for editing organisation info -->
        <div id="editForm" style="display:none;">
            <form asp-action="EditOrganisationInfo" method="post" enctype="multipart/form-data" class="Edit-OrganisationInfo-Form">
                <label>Oid</label>
                <input type="text" name="oid" value="@Model.SelectedOrganisation?.oid" readonly />

                <label>Organization Name</label>
                <input type="text" name="Oname" value="@Model.SelectedOrganisation?.Oname" />

                <label>SPOC</label>
                <input type="text" name="Spoc" value="@Model.SelectedOrganisation?.Spoc" />

                <label>Start Year</label>
                <input type="number" name="styear" value="@Model.SelectedOrganisation?.styear" />

                <label>Contact Name</label>
                <input type="text" name="Contname" value="@Model.SelectedOrganisation?.Contname" />

                <label>Contact Email</label>
                <input type="email" name="Contemail" value="@Model.SelectedOrganisation?.Contemail" />

                <label for="Oactive">Active</label>
                <select id="Oactive" name="Oactive">
                    <option value=1>Yes</option>
                    <option value=0>No</option>
                </select>

                <label>Contract Copy (optional)</label>
                <input type="file" name="PdfFile" accept=".pdf" />

                <button type="submit">Save Changes</button>
                <button type="button" onclick="cancelEdit()">Close</button>

            </form>
        </div>
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>



    @if (TempData["SuccessMessage"] != null)
    {
        <text>
            alert('@TempData["SuccessMessage"]');
        </text>
    }

        document.addEventListener('DOMContentLoaded', () => {
            const linksContainer = document.getElementById('org-details-links-container');

            linksContainer.addEventListener('click', function (e) {
                if (e.target.tagName === 'A') {
                    // Remove 'active' from all links
                    const allLinks = linksContainer.querySelectorAll('a');
                    allLinks.forEach(link => link.classList.remove('active'));

                    // Add 'active' to the clicked link
                    e.target.classList.add('active');
                }
            });
        });

    let originalOrgDetailsBodyHtml = "";

    document.addEventListener("DOMContentLoaded", () => {
        const bodyEl = document.getElementById("orgDetailsBody");
        if (bodyEl) {
            originalOrgDetailsBodyHtml = bodyEl.innerHTML;
        }
    });

    //Start of Working Of General INFO-------------------------
    function loadGeneralInfo() {
        const oid = document.getElementById('organisationDropdown').value;
        if (!oid) {
            alert("Please select an organisation.");
            return;
        }
        const selectedOrgName = document.querySelector('#organisationDropdown option:checked').textContent;
        document.getElementById("orgDetailsHeader").innerText = selectedOrgName;

        // Set loading text
        const orgDetailsBody = document.getElementById("orgDetailsBody");
        orgDetailsBody.innerHTML = "Loading...";

        fetch(`/OrganisationSetup/OrganisationSetup?selectedOid=${oid}`)
            .then(response => response.text())
            .then(html => {
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');

                const newBody = doc.getElementById("orgDetailsBody");

                if (newBody) {
                    orgDetailsBody.innerHTML = newBody.innerHTML;
                    orgDetailsBody.style.display = "grid";
                }

                // document.getElementById("orgDetailsHeader").innerText = "@Model.SelectedOrganisation?.Oname";


                // Mark this link as active
                document.querySelectorAll('.org-details-links-container a').forEach(link => {
                    link.classList.remove('active');
                });
                document.getElementById("generalInfoLink").classList.add('active');
            })
            .catch(err => {
                console.error("Error loading general info:", err);
                orgDetailsBody.innerHTML = "Failed to load data.";
            });
    }

    //End of Working Of General INFO-------------------------


    //Start of Working Of Add Location-------------------------
        function showUploadForm() {
        const oid = document.getElementById("organisationDropdown").value;
        if (!oid) {
            alert("Organisation ID is not available. Please select a valid organisation.");
            return;
        }

        const selectedOrgName = document.querySelector('#organisationDropdown option:checked').textContent;
        document.getElementById("orgDetailsHeader").innerText = selectedOrgName;

            $("#orgDetailsBody").load(`/OrganisationSetup/upload?oid=${oid}`);
               
        }

    //End of Working Of Add Location--------------------------------

    //Start of Edit Organisation------------------------------ 
    function showEditForm() {
        document.getElementById("orgDetailsBody").style.display = "none";           // Hide the org-details-body        
        document.getElementById("editForm").style.display = "block";                // Show the edit form
    }

    function cancelEdit() {
        document.getElementById("editForm").style.display = "none";                   // Hide the edit form  
        document.getElementById("orgDetailsBody").style.display = "grid";             // Show the org-details-body again (General Information section)
    }
    //End of Edit Organisation-------------------------------------------
    
    //Start of Add Organisation------------------------------
    function showAddOrganisationForm() {
     
            fetch('/OrganisationSetup/AddOrganisation')
                .then(response => {
                    if (!response.ok) throw new Error("Network response was not ok");
                    return response.text();
                })
                .then(html => {
                    document.getElementById("orgDetailsContainer").innerHTML = html;
                })
                .catch(error => {
                    console.error("Error loading the form:", error);
                    document.getElementById("orgDetailsContainer").innerHTML = "<p>Error loading the form. Please try again.</p>";
                });
    }
    //End of Add Organisation------------------------------

    //Start of Location data Form------------------------------
    function LocationDataForm() {
        const oid = document.getElementById("organisationDropdown").value;
        console.log(oid + "oid in Location Data")
        if (!oid) {
            alert("Organisation ID is not available. Please select a valid organisation.");
            return;
        }

        const selectedOrgName = document.querySelector('#organisationDropdown option:checked').textContent;
        document.getElementById("orgDetailsHeader").innerText = selectedOrgName;

        const orgDetailsBody = document.getElementById("orgDetailsBody");
        orgDetailsBody.style.display = "block";
        orgDetailsBody.style.padding = "10px";

        $("#orgDetailsBody").load(`/OrganisationSetup/GetLocationDatabyOid?oid=${oid}`);

    }
    // End of Location data Form-----------------------------

    //Start of Working Of Add Location for BOCW sites-------------------------
    function showBOCWUploadForm() {
        const oid = document.getElementById("organisationDropdown").value;
        if (!oid) {
            alert("Organisation ID is not available. Please select a valid organisation.");
            return;
        }

        const selectedOrgName = document.querySelector('#organisationDropdown option:checked').textContent;
        document.getElementById("orgDetailsHeader").innerText = selectedOrgName;

        $("#orgDetailsBody").load(`/OrganisationSetup/BOCWSiteSetup?oid=${oid}`);
    }
    // End of  Add Location for BOCW sites-----------------------------

     // Start of viewing BOCW DATA----------------------------------------------------
    function viewBOCWData() {
        const oid = document.getElementById("organisationDropdown").value;
        if (!oid) {
            
            alert("Organisation ID is not available. Please select a valid organisation.");
            return;
        }

        const selectedOrgName = document.querySelector('#organisationDropdown option:checked').textContent;
        document.getElementById("orgDetailsHeader").innerText = selectedOrgName;
        
        $("#orgDetailsBody").load(`/OrganisationSetup/viewbodetails?oid=${oid}`);
    }
    // END of viewing BOCW DATA------------------------------------------------------


    function onOrganisationChange() {
        var oid = document.getElementById('organisationDropdown').value;
        var orgDetailsHeader = document.getElementById("orgDetailsHeader");
        var orgDetailsLinksContainer = document.getElementById("org-details-links-container");
        var orgDetailsBody = document.getElementById("orgDetailsBody");

        if (oid) {
            orgDetailsBody.innerHTML = "Loading...";                            // Show loading state if needed

            fetch(`/OrganisationSetup/OrganisationSetup?selectedOid=${oid}`)    // Use AJAX to fetch the updated content
                .then(response => response.text())
                .then(html => {
                    // Create a temporary element to parse the response
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, 'text/html');

                    // Extract the parts we need from the response
                    const newHeader = doc.getElementById("orgDetailsHeader");
                    const newLinksContainer = doc.getElementById("org-details-links-container");
                    const newBody = doc.getElementById("orgDetailsBody");

                    // Update page elements
                    if (newHeader) orgDetailsHeader.innerHTML = newHeader.innerHTML;
                    if (newLinksContainer) orgDetailsLinksContainer.innerHTML = newLinksContainer.innerHTML;
                    if (newBody) orgDetailsBody.innerHTML = newBody.innerHTML;

                    orgDetailsHeader.innerText = document.querySelector('#organisationDropdown option:checked').textContent;    // Update header

                    //containers -> visible
                    orgDetailsLinksContainer.style.display = "grid";
                    orgDetailsBody.style.display = "grid";

                    // Update the URL without reloading the page
                    // history.pushState(null, null, `/OrganisationSetup/OrganisationSetup?selectedOid=${oid}`);
                })
                .catch(error => {
                    console.error('Error:', error);
                    orgDetailsBody.innerHTML = "Error loading organisation details";
                });
        } else {
            orgDetailsHeader.innerText = "Select Organisation";
            orgDetailsLinksContainer.style.display = "none";
            orgDetailsBody.style.display = "none";
        }
    }


</script>
