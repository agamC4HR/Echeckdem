@model Echeckdem.CustomFolder.CombinedOrganisationSetupViewModel

@{
    @if (Context.Session.GetInt32("User Level") == 1)
    {
        ViewData["Title"] = "Organisation List";
        ViewData["Heading"] = "Organisation Management";
        ViewData["Heading_child"] = "Organizational intelligence and response toolkit.";
    }
}

<style>

    .table-container {
        width: 30vw;
        top: 40px;
        height: 80vh;
        overflow: scroll;
    }

    .styled-table {
        margin: 0;
    }

        .styled-table thead {
            top: 0;
        }


    .organization-count {
        text-align: center;
        font-size: 1.2em;
        margin-bottom: 20px;
    }

    .count-badge {
        background-color: #007bff;
        color: white;
        padding: 5px 10px;
        border-radius: 12px;
    }


    .org-link {
        display: block;
        text-decoration: none;
        color: black;
        font-size: 12px;
        font-weight: 300;
        text-align: left;
        padding: 0;
        font-family: Arial;
    }

        .org-link:hover {
            text-decoration: underline;
        }

    .org-details-container {
       /*  display: none; */
        position: absolute;
        width: 66vw;
        margin: 20px auto;
        padding: 0 15px;
        top: 40px;
        left: 420px;
        font-family: 'Arial', sans-serif;
        color: #333;
    }

    .org-details-header {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        margin: 20px 0;
        border: 2px solid #dd3432;
    }

    .child-org-details-header{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        border-bottom: 2px solid #dd3432;
        padding: 0px 10px;
    }

    .child-org-details-header h2 {
        background-color: white;
        color: #dd3432;
        padding: 10px;
        font-weight: bold;
        text-align: center;
        margin: 0;
        font-size: 16px;
    }

    .child-org-details-header button {
            padding: 5px;
            font-size: 12px;
            font-weight: bold;
            background-color: #dd3432;
            color: white;
            border: 2px solid #dd3432;
            border-radius:4px;
    }

        .child-org-details-header button:hover {
            background-color: white;
            color: #dd3432;


        }

    .org-details-links-container {
        display: grid;
        grid-template-rows: auto auto;
        row-gap: 10px;
        padding: 10px;
        background-color: #f8f9fa;
        border-bottom: 1px solid #ddd;
    }

    .org-details-upper-links, .org-details-lower-links {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 10px;
        justify-items: stretch;
    }

    .org-details-links-container a {
        background-color: #dd3432;
        color: white;
        text-decoration: none;
        font-size: 12px;
        padding: 8px 12px;
        border-radius: 4px;
        border: 2px solid #dd3432;
        transition: background-color 0.3s ease, color 0.3s ease;
        text-align: center;
        white-space: nowrap; /* Prevent text wrapping */
    }

        .org-details-links-container a.active {
            background-color: white;
            color: #dd3432;
            border: 2px solid #dd3432;
            font-weight: bold;
        }

        .org-details-links-container a:hover {
            background-color: white;
            color: #dd3432;
            border: 2px solid #dd3432;
        }

    .org-details-body {
        display: grid;
        grid-template-columns: 1fr 1fr; /* Two equal columns */
        gap: 15px;
        padding: 20px;
        font-size: 16px;
        line-height: 1.6;
    }

    .Edit-OrganisationInfo-Form{
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 15px;
        padding: 20px;
        font-size: 16px;
        line-height: 1.6;

    }

        .org-details-body p {
            margin: 0;
        }

        strong {
        color: #dd3432;
        }


    .Edit-OrganisationInfo-Form label {
            font-weight: bold;
            color: #dd3432;
            padding-right: 10px;
   }

    .Edit-OrganisationInfo-Form input {
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

    .Edit-OrganisationInfo-Form button {
        padding: 5px;
        font-size: 12px;
        font-weight:bold;
        background-color: white;
        color: #dd3432;
        border: 2px solid #dd3432;
    }

        .Edit-OrganisationInfo-Form button:hover {
            background-color: #dd3432;
            color:white ;
        }

 
</style>
@if (Context.Session.GetInt32("User Level") == 1)
                        {

<div class="table-heading-container">

    <!-- Search bar -->
    <input type="text" id="searchBar" placeholder="Search..." class="table-search-input" onkeyup="searchTable()">

    <!-- Download button -->
  @*   <button class="table-export-btn" onclick="downloadData()">
        EXPORT
    </button>
 *@
    <!-- Add button -->
    <button class="table-add-btn" onclick="showAddOrganisationForm()">
        Add
    </button>

</div>

<!-- Organization Count -->
@*     <div class="organization-count">
        <p>Total Organizations: <span class="count-badge">@Model.Count</span></p>
    </div> *@



<!-- Table Section -->
<div class="table-container" id="organisationTable">
    <table class="styled-table">
        <thead>
            <tr>
                <th>S.No.</th>
                <th>Organisation Name</th>
            </tr>
        </thead>
            <tbody>
            @{
                int sno = 1;
            }
                @if (Model.OrganisationsList?.Any() ?? false)
                {
                    
                    foreach (var org in Model.OrganisationsList)
                    {
                        <tr>
                            <td>@sno</td>
                            <td>
                                <a asp-action="OrganisationSetup" asp-route-selectedOid="@org.oid" class="org-link">
                                    @org.Oname
                                </a>
                            </td>
                    </tr>
                    sno++;
                }
                }
                else
                {
                    <tr>
                        <td colspan="2">No organizations found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
<!-- Selected Organisation Details Section -->
<div class="org-details-container" id="orgDetailsContainer">
    @if (Model.SelectedOrganisation != null)
    {
        <div class="org-details-header">
            <div class="child-org-details-header">
                <h2 id="orgDetailsHeader">@Model.SelectedOrganisation.Oname</h2>
                <button type="button" onclick="showEditForm()">Edit</button>
            </div>
            <div class="org-details-links-container">

                <div class="org-details-upper-links">
                    <!-- Top links -->
                    <a asp-controller="OrganisationSetup" asp-action="OrganisationSetup" asp-route-selectedOid="@Model.SelectedOrganisation.oid" id="generalInfoLink" class="org-details-upper-links active">General Information</a>
                    <a asp-controller="OrganisationSetup" asp-action="OrganisationSetup" asp-route-selectedOid="@Model.SelectedOrganisation.oid">Location Map</a>
                    <a href="javascript:void(0);" onclick="showUploadForm()">Add Locations</a>
                    <a href="javascript:void(0)" onclick="LocationDataForm()" id="locationDataInfo" class="org-details-upper-links">Location Data</a>
                </div>

                <div class="org-details-lower-links">
                    <!-- Bottom links -->
                        <a asp-controller="OrganisationSetup" asp-action="GetLocationDatabyOid" asp-route-oid="ERM">Location Setup</a>
                        <a href="#">Returns 1</a>
                    <a href="#">Contributions 1</a>
                    <a href="#">Returns 2</a>
                </div>

            </div>
            <div id="orgDetailsBody" class="org-details-body">
                <p><strong>OID:</strong> @Model.SelectedOrganisation.oid</p>
                <p><strong>Name:</strong> @Model.SelectedOrganisation.Oname</p>
                <p><strong>SPOC:</strong> @Model.SelectedOrganisation.Spoc</p>
                <p><strong>Start Year:</strong> @Model.SelectedOrganisation.styear</p>
                <p><strong>Contact Name:</strong> @Model.SelectedOrganisation.Contname</p>
                <p><strong>Contact Email:</strong> @Model.SelectedOrganisation.Contemail</p>
                <p><strong>Active:</strong> @Model.SelectedOrganisation.Oactive</p>
                    
            </div>

            <!-- Form for editing organisation info -->
            <div id="editForm" style="display:none;">
                <form asp-action="EditOrganisationInfo" method="post" class="Edit-OrganisationInfo-Form">
                    <label>Oid</label>
                    <input type="text" name="oid" value="@Model.SelectedOrganisation.oid" readonly />

                    <label>Organization Name</label>
                    <input type="text" name="Oname" value="@Model.SelectedOrganisation.Oname" />

                    <label>SPOC</label>
                    <input type="text" name="Spoc" value="@Model.SelectedOrganisation.Spoc" />

                    <label>Start Year</label>
                    <input type="number" name="styear" value="@Model.SelectedOrganisation.styear" />

                    <label>Contact Name</label>
                    <input type="text" name="Contname" value="@Model.SelectedOrganisation.Contname" />

                    <label>Contact Email</label>
                    <input type="email" name="Contemail" value="@Model.SelectedOrganisation.Contemail" />

                        <label>Active</label>
                        <input type="checkbox" name="Oactive" value="@Model.SelectedOrganisation.Oactive" />

                    <button type="submit">Save Changes</button>
                    <button type="button" onclick="cancelEdit()">Close</button>

                </form>
            </div>


        </div>
    }
    else
    {
        <p>Select an organization to view details.</p>
    }
</div>


}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>

    @if (TempData["SuccessMessage"] != null)
    {
        <text>
            alert('@TempData["SuccessMessage"]');
        </text>
    }

        document.querySelectorAll('.org-details-links-container a').forEach(link => {
            link.addEventListener('click', function (e) {
                // Remove active class from all links
                document.querySelectorAll('.org-details-links-container a').forEach(link => {
                    link.classList.remove('active');
                });

                // Add active class to the clicked link
                e.target.classList.add('active');

                // Show or hide the Edit button based on the active link
                if (e.target.id === "generalInfoLink" && e.target.classList.contains('active')) {
                    document.querySelector('.child-org-details-header button').style.display = 'block';  // Show the Edit button
                    document.querySelector('.child-org-details-header button').onclick = 'showUploadForm()'
                }
              @*   else if (e.target.id === "locationDataInfo" && e.target.classList.contains('active')) {
                    document.querySelector('.child-org-details-header button').style.display = 'block';  // Show the Edit button
                    document.querySelector('.child-org-details-header button').onclick = 'showLocationForm()';
                }  *@
                else {
                    document.querySelector('.child-org-details-header button').style.display = 'none';  // Hide the Edit button
                }
            });
        });

    // Start of Working of Search Bar-------------------------
    function searchTable() {
        const input = document.getElementById('searchBar');
        const filter = input.value.toLowerCase();  
        const rows = document.querySelectorAll('.styled-table tbody tr');  

        rows.forEach(row => {
            const orgNameCell = row.cells[1];  // Get the 'Organisation Name' cell (2nd column)
            const anchor = orgNameCell.querySelector('.org-link');  // Get the <a> tag within the cell
            let orgNameText = anchor.textContent || anchor.innerText;  // Get the plain text of the organization name

            // Check if the filter text matches any part of the organization name
            if (orgNameText.toLowerCase().includes(filter)) {
                row.style.display = "";  // Show the row if it matches
                highlightText(anchor, filter);  // Highlight the matched text inside the <a> tag
            } else {
                row.style.display = "none";  // Hide the row if it doesn't match
                removeHighlight(anchor);  // Remove previous highlights from the <a> tag
            }
        });
    }

    // Function to highlight the text inside the anchor tag
    function highlightText(anchor, filter) {
        removeHighlight(anchor);  // Remove any previous highlights first

        const regex = new RegExp(`(${filter})`, 'gi');  // Create a case-insensitive regex for the filter
        anchor.innerHTML = anchor.innerHTML.replace(regex, '<span class="highlight">$1</span>');  // Wrap matched text in a span with a highlight class
    }

    // Function to remove the highlighting from the anchor tag

    function removeHighlight(anchor) {
        // Remove any previous highlights from the <a> tag
        anchor.innerHTML = anchor.innerHTML.replace(/<span class="highlight">(.*?)<\/span>/gi, '$1');
    }
    // End of Working of Search Bar------------------------

    //Start of Working Of Add Location-------------------------
        function showUploadForm() {
            document.getElementById("orgDetailsHeader").innerText = "Locations";
            $("#orgDetailsBody").load('/OrganisationSetup/upload');
               
        }

    //End of Working Of Add Location--------------------------------

    //Start of Edit Organisation------------------------------ 
    function showEditForm() {
        // Hide the org-details-body
        document.getElementById("orgDetailsBody").style.display = "none";

        // Show the edit form
        document.getElementById("editForm").style.display = "block";
    }

    function cancelEdit() {
        // Hide the edit form
        document.getElementById("editForm").style.display = "none";

        // Show the org-details-body again (General Information section)
        document.getElementById("orgDetailsBody").style.display = "grid";
    }
    //End of Edit Organisation-------------------------------------------
    
    //Start of Add Organisation------------------------------
    function showAddOrganisationForm() {
     
            fetch('/OrganisationSetup/AddOrganisation')
                .then(response => {
                    if (!response.ok) throw new Error("Network response was not ok");
                    return response.text();
                })
                .then(html => {
                    // Inject the form HTML into the orgDetailsBody
                    document.getElementById("orgDetailsContainer").innerHTML = html;
                })
                .catch(error => {
                    console.error("Error loading the form:", error);
                    document.getElementById("orgDetailsContainer").innerHTML = "<p>Error loading the form. Please try again.</p>";
                });
    }
    //End of Add Organisation------------------------------

    //Start of Location data Form------------------------------
    function LocationDataForm() {
        const oid = "@(Model?.SelectedOrganisation?.oid ?? string.Empty)";
        if (!oid) {
            alert("Organisation ID is not available. Please select a valid organisation.");
            return;
        }

        // Change the display style of orgDetailsBody to block
        const orgDetailsBody = document.getElementById("orgDetailsBody");
        orgDetailsBody.style.display = "block";
        orgDetailsBody.style.padding = "10px";

        document.getElementById("orgDetailsHeader").innerText = "Location Data";
        $("#orgDetailsBody").load(`/OrganisationSetup/GetLocationDatabyOid?oid=${oid}`);

    }
    // End of Location data Form------------------------------
    
    // Function to show the edit form for location data
@*     function showLocationEditForm() {
        const oid = "@(Model?.SelectedOrganisation?.oid ?? string.Empty)";
        if (!oid) {
            alert("Organisation ID is not available. Please select a valid organisation.");
            return;
        }

        // Hide the org-details-body
        document.getElementById("orgDetailsBody").style.display = "none";

        // Load the edit form for location data
        const editForm = document.getElementById("editForm");
        editForm.style.display = "block";
        $("#editForm").load(`/OrganisationSetup/EditLocationData?oid=${oid}`);
    }
 *@
</script>
