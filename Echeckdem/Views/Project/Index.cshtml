@model Echeckdem.CustomFolder.ProjectBocw.ProjectBocwViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Project Detail";
    ViewData["Heading"] = "Project Detail";
    
   
}
<div class="table-heading-container">

    <!-- Search bar -->
    <input type="text" id="searchBar" placeholder="Search..." class="table-search-input" onkeyup="searchTable()">

    <!-- Outer-Filter button -->
    <div class="table-filter-buttons">
      @*  <select>
           <option value="">
               Select a Client</option>
      </select> *@
        <select id="clientDropdown" onchange="populateSites()">
            <option value="">Select a Client</option>
            @foreach (var client in Model.Clients)
            {
                <option value="@client">@client</option>
            }
        </select>
        <select id="siteDropdown">
            <option value="">Select a Site</option>
        </select>
    </div>
</div>
<div class="table-container-detailsView">
    <table class="styled-table">
        <thead>
            <tr><th colspan="11" class="table-header">Select a Client and Project</th>
                </tr>
        </thead>
        <thead>
            <tr>
                <th>Site Name:</th>
                <td data-id="SiteName"></td>
                <th>State:</th>
                <td data-id="State"></td>
                <th>City:</th>
                <td data-id="City"></td>
                <th>Project Client</th>
                <td data-id="ClientName"></td>
                <th colspan="2">Project General Contractor</th>
                <td data-id="GeneralContractor"></td>
            </tr>
            <tr>
                <th colspan="2">Construction Start Date:</th>
                <td data-id="ProjectStartDate"></td>
                <th>Construction End Date:</th>
                <td data-id="ProjectEndDate"></td>
                <th>Project Area:</th>
                <td data-id="ProjectArea"></td>
                <th>Project Cost:</th>
                <td data-id="ProjectCost"></td>
                <th>Project Manager</th>
                <td data-id="ProjectLead"></td>
            </tr>

            </thead>
        </table>
    <table class="styled-table">
        <thead>
            <tr><th class="text-center" colspan="11" class="table-header">Compliance Activity</th></tr>
            <tr>
                <th>S.No.</th>
                
                
                <th>Service Type BOCWSCOPE</th> 
                <th>Service TASK NCBOCW</th>
                <th>Category category BOCWSCOPE</th>
                <th>Due Date</th>
                <th>Status</th>
                <th>Completion Date</th>
                
                <th colspan="2">File</th>
                <th>Edit</th>
                
            </tr>
        </thead>
        <tbody id ="complianceActivities"></tbody>
        <thead style="top:75px;">
            <tr><th class="text-center" colspan="11" class="table-header">On-Going Activites</th></tr>
        <tr>
           <th>Tracker For</th>
            
            
            <th>Inspection Notice</th>
            <th>Title</th>
            <th>Detail of Issue</th>
            <th>Status</th>
            <th>Start Date</th>
            <th>Close Date</th>
            <th>SLA</th>
            <th>Details</th>
        </tr>
    </thead>
     </table>
</div>

@section Scripts {
    <script>
        const clientSiteMap = @Html.Raw(Json.Serialize(Model.ClientSiteMap));

        function populateSites() {
            const client = document.getElementById('clientDropdown').value;
            const siteDropdown = document.getElementById('siteDropdown');
            siteDropdown.innerHTML = '<option value="">Select a Site</option>';

            if (clientSiteMap[client]) {
                clientSiteMap[client].forEach(site => {
                    siteDropdown.innerHTML += `<option value="${site}">${site}</option>`;
                });
            }
        }

        document.getElementById('siteDropdown').addEventListener('change', function () {
            const client = document.getElementById('clientDropdown').value;
            const site = this.value;

            if (client && site) {
                fetch(`/Project/GetProjectDetails?client=${encodeURIComponent(client)}&site=${encodeURIComponent(site)}`)
                    .then(res => res.json())
                    .then(data => {
                        if (!data) return;

                        // Populate project details
                        document.querySelector('td[data-id="SiteName"]').innerText = data.siteName || '';
                        document.querySelector('td[data-id="State"]').innerText = data.state || '';
                        document.querySelector('td[data-id="City"]').innerText = data.city || '';
                        document.querySelector('td[data-id="ClientName"]').innerText = data.clientName || '';
                        document.querySelector('td[data-id="GeneralContractor"]').innerText = data.generalContractor || '';
                        document.querySelector('td[data-id="ProjectStartDate"]').innerText = data.projectStartDate || '';
                        document.querySelector('td[data-id="ProjectEndDate"]').innerText = data.projectEndDate || '';
                        document.querySelector('td[data-id="ProjectArea"]').innerText = data.projectArea || '';
                        document.querySelector('td[data-id="ProjectCost"]').innerText = data.projectCost || '';
                        document.querySelector('td[data-id="ProjectLead"]').innerText = data.projectLead || '';
                    });

                // Fetch compliance activities for the selected client and site
                fetch(`/Project/GetComplianceActivities?client=${encodeURIComponent(client)}&site=${encodeURIComponent(site)}`)
                    .then(res => res.json())
                    .then(activities => {
                        const tbody = document.getElementById('complianceActivities');
                        tbody.innerHTML = ''; // Clear existing rows

                        activities.forEach((activity, index) => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                        <td>${activity.SNo}</td>
                                        <td>${activity.ServiceType}</td>
                                        <td>${activity.Service}</td>
                                        <td>${activity.DueDate}</td>
                                        <td>${activity.Status}</td>
                                        <td>${activity.CompletionDate || ''}</td>
                                        <td><a href="${activity.FileUrl}" target="_blank">${activity.FileName || 'No File'}</a></td>
                                        <td><a href="/EditActivity/${activity.TransactionId}">Edit</a></td>
                                    `;
                            tbody.appendChild(row);
                        });
                    });
            }
        });
    </script>
}